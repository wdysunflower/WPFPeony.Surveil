<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themes="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:themeKeys="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/themekeys"
                    xmlns:dxwui="http://schemas.devexpress.com/winfx/2008/xaml/windowsui"
                    xmlns:internal="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/internal"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm">

    <!--FloatingContainerTemplate-->
    <DataTemplate x:Key="{themes:FloatingContainerThemeKey ThemeName=MetropolisDark, ResourceKey=FloatingContainerTemplate}">
        <Grid SnapsToDevicePixels="True">
            <Border x:Name="FloatingContainerBorder"
                    Background="{DynamicResource {themes:FloatingContainerThemeKey ThemeName=MetropolisDark, ResourceKey=FloatingContainerBackground}}"
                    BorderBrush="#1F1F1F"
                    BorderThickness="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Thumb x:Name="PART_DragWidget"
                           Template="{DynamicResource {themes:FloatingContainerThemeKey ThemeName=MetropolisDark, ResourceKey=FloatingContainerDragWidgetTemplate}}"
                           Grid.Row="0"
                           Panel.ZIndex="1" />
                    <Border x:Name="FloatingContainerHeader"
                            Grid.Row="0"
                            Panel.ZIndex="3">
                        <Grid Margin="5,5,10,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="PART_CaptionContentPresenter"
                                              ContentTemplate="{DynamicResource {themes:FloatingContainerThemeKey IsVisibleInBlend=True, ThemeName=MetropolisDark, ResourceKey=FloatingContainerCaptionTemplate}}"
                                              Grid.Column="0" />
                            <StackPanel x:Name="stackPanel"
                                        Orientation="Horizontal"
                                        Grid.Column="1">
                                <Button x:Name="PART_Minimize"
                                        Width="21"
                                        Height="21"
                                        Focusable="False"
                                        Template="{DynamicResource {themes:FloatingContainerThemeKey ThemeName=MetropolisDark, ResourceKey=FloatingContainerMinimizeButtonTemplate}}" />
                                <Button x:Name="PART_Restore"
                                        Width="21"
                                        Height="21"
                                        Focusable="False"
                                        Template="{DynamicResource {themes:FloatingContainerThemeKey ThemeName=MetropolisDark, ResourceKey=FloatingContainerRestoreButtonTemplate}}"
                                        Visibility="{Binding Path=(dx:FloatingContainer.IsMaximized), Converter={dx:BooleanToVisibilityConverter Invert=False}}" />
                                <Button x:Name="PART_Maximize"
                                        Width="21"
                                        Height="21"
                                        Focusable="False"
                                        Template="{DynamicResource {themes:FloatingContainerThemeKey ThemeName=MetropolisDark, ResourceKey=FloatingContainerMaximizeButtonTemplate}}"
                                        Visibility="{Binding Path=(dx:FloatingContainer.IsMaximized), Converter={dx:BooleanToVisibilityConverter Invert=True}}" />
                                <Button x:Name="PART_CloseButton"
                                        Width="21"
                                        Height="21"
                                        Focusable="False"
                                        Template="{DynamicResource {themes:FloatingContainerThemeKey ThemeName=MetropolisDark, ResourceKey=FloatingContainerCloseButtonTemplate}}" />
                            </StackPanel>
                        </Grid>
                    </Border>
                    <Border x:Name="FloatingContainerBody"
                            Grid.Row="1"
                            Panel.ZIndex="2">
                        <Grid Background="{DynamicResource {themes:FloatingContainerThemeKey ThemeName=MetropolisDark, ResourceKey=FloatingContainerBackground}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <dx:BackgroundPanel x:Name="PART_ContainerContent"
                                                Content="{Binding}" />
                            <StackPanel x:Name="PART_StatusPanel"
                                        VerticalAlignment="Bottom"
                                        Grid.Row="0"
                                        Visibility="Collapsed">
                                <Thumb x:Name="PART_SizeGrip"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Bottom"
                                       Cursor="SizeNWSE"
                                       Template="{DynamicResource {themes:FloatingContainerThemeKey IsVisibleInBlend=True, ThemeName=MetropolisDark, ResourceKey=FloatingContainerSizeGripTemplate}}" />
                            </StackPanel>
                        </Grid>
                    </Border>
                </Grid>
            </Border>
            <Control x:Name="PART_ResizeFrame"
                     Template="{DynamicResource {themes:FloatingContainerThemeKey ThemeName=MetropolisDark, ResourceKey=FloatingContainerResizeFrame}}"
                     Focusable="False"
                     Margin="-1" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.IsActive)}"
                         Value="False">
                <Setter Property="Opacity"
                        TargetName="PART_CaptionContentPresenter"
                        Value="0.5" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.FloatingContainer).AllowSizing, RelativeSource={RelativeSource Self}}"
                         Value="false">
                <Setter Property="Visibility"
                        TargetName="PART_StatusPanel"
                        Value="Collapsed" />
                <Setter Property="Visibility"
                        TargetName="PART_ResizeFrame"
                        Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.IsMaximized)}"
                         Value="True" />
        </DataTemplate.Triggers>
    </DataTemplate>

    <!--NavigationHeaderControl-->
    <ControlTemplate x:Key="DefaultHeaderControlTemplate"
                     TargetType="internal:NavigationHeaderControl">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <internal:BackButton x:Name="PART_BackButton"
                                 Command="{TemplateBinding ActualBackCommand}"
                                 VerticalAlignment="Center" 
                                 Margin="0,5,5,0"/>
            <ContentPresenter x:Name="PART_Content"
                              VerticalAlignment="Center"
                              Grid.Column="1" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{themes:DefaultStyleThemeKey ThemeName=MetropolisDark,FullName=DevExpress.Xpf.WindowsUI.Internal.NavigationHeaderControl}"
           TargetType="{x:Type internal:NavigationHeaderControl}">
        <Setter Property="Template"
                Value="{StaticResource DefaultHeaderControlTemplate}" />
        <Setter Property="FontSize"
                Value="30" />
        <Setter Property="FontWeight"
                Value="Light" />
        <Setter Property="Focusable"
                Value="False" />
    </Style>
    
    <!--BackButtonTemplate -->
    <!-- Colors -->
    <Color x:Key="colorDefault">#BFFFFFFF</Color>
    <Color x:Key="colorHover">#FFF78A09</Color>
    <Color x:Key="colorPressed">#FFF78A09</Color>
    <Color x:Key="colorDisabled">#FF333333</Color>
    <SolidColorBrush x:Key="ellipseFillDefault"
                     Color="#FF333333" />
    <SolidColorBrush x:Key="ellipseFillHover"
                     Color="#FF333333" />
    <SolidColorBrush x:Key="ellipseFillPressed"
                     Color="#FF222222" />
    <SolidColorBrush x:Key="ellipseStrokeDefault"
                     Color="#FF333333" />
    <SolidColorBrush x:Key="ellipseStrokeHover"
                     Color="#FFF78A09" />
    <SolidColorBrush x:Key="ellipseStrokePressed"
                     Color="#FFF78A09" />
    <SolidColorBrush x:Key="pathColorDefault"
                     Color="{StaticResource colorDefault}" />
    <SolidColorBrush x:Key="pathColorHover"
                     Color="{StaticResource colorHover}" />
    <SolidColorBrush x:Key="pathColorPressed"
                     Color="{StaticResource colorPressed}" />
    <SolidColorBrush x:Key="brushDisabled"
                     Color="{StaticResource colorDisabled}" />
    <!-- Glyph -->
    <DataTemplate x:Key="{themeKeys:CommandButtonElementsThemeKey ThemeName=MetropolisDark,ResourceKey=BackGlyph}">
        <Path Data="F1M1928.8,1024.07L1920.05,1024.07 1905.62,1009.64 1901.24,1005.26 1920.1,986.403 1928.78,986.403 1928.82,986.439 1913.09,1002.17 1954.58,1002.17 1954.58,1008.35 1913.09,1008.35 1928.8,1024.07z"
              Stretch="Uniform"
              Fill="#FFFFFFFF"
              Width="26"
              Height="26"
              Margin="0,0,0,0" />
    </DataTemplate>

    <!-- Template -->
    <ControlTemplate TargetType="dxwui:CommandButton"
                     x:Key="{themeKeys:CommandButtonElementsThemeKey ThemeName=MetropolisDark,ResourceKey=Template}">
        <Grid SnapsToDevicePixels="True">
            <Rectangle x:Name="border"
                       Fill="{StaticResource ellipseFillDefault}"
                       Stroke="{StaticResource ellipseStrokeDefault}"
                       StrokeThickness="2"
                       MinHeight="30"
                       MinWidth="45"
                       UseLayoutRounding="True">
                <dxmvvm:Interaction.Behaviors>
                    <internal:ConstrainedSizeBehavior />
                </dxmvvm:Interaction.Behaviors>
            </Rectangle>
            <internal:ShapeContentPresenter x:Name="content"
                                            Foreground="{StaticResource pathColorDefault}"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                           Storyboard.TargetProperty="Stroke">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{StaticResource ellipseStrokeHover}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                           Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{StaticResource ellipseFillHover}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="content"
                                                           Storyboard.TargetProperty="Foreground">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{StaticResource pathColorHover}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                           Storyboard.TargetProperty="Stroke">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{StaticResource ellipseStrokePressed}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                           Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{StaticResource ellipseFillPressed}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="content"
                                                           Storyboard.TargetProperty="Foreground">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{StaticResource pathColorPressed}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard></Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <!--PageAdornerControlTemplate-->
    <ControlTemplate x:Key="{themeKeys:WindowsUIElementsThemeKey ThemeName=MetropolisDark,ResourceKey=PageAdornerControlTemplate}"
                     TargetType="dxwui:PageAdornerControl">
        <Border Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Margin="{TemplateBinding Padding}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid Margin="5,0">
                    <internal:NavigationHeaderControl VerticalAlignment="Center"
                                                      x:Name="PART_NavigationHeader"
                                                      Content="{TemplateBinding Header}"
                                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                      BackCommand="{TemplateBinding BackCommand}"
                                                      ShowBackButton="{TemplateBinding ShowBackButton}"
                                                      Style="{StaticResource {themes:DefaultStyleThemeKey ThemeName=MetropolisDark,FullName=DevExpress.Xpf.WindowsUI.Internal.NavigationHeaderControl}}" />
                </Grid>
                <ContentPresenter Grid.Row="1" />
            </Grid>
        </Border>
    </ControlTemplate>

    <!--PageViewTemplate-->
    <ControlTemplate x:Key="{themeKeys:PageViewElementsThemeKey ThemeName=MetropolisDark,ResourceKey=Template}"
                     TargetType="dxwui:PageView">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Margin="{TemplateBinding Padding}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid Margin="40,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <internal:NavigationHeaderControl VerticalAlignment="Center"
                                                      x:Name="PART_NavigationHeader"
                                                      Content="{TemplateBinding Header}"
                                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                      BackCommand="{TemplateBinding BackCommand}"
                                                      ShowBackButton="{TemplateBinding ShowBackButton}" />
                    <ItemsPresenter Grid.Column="1"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Margin="300,0,0,0" />
                </Grid>
                <Border Grid.Row="1"
                        BorderBrush="#FF515151"
                        BorderThickness="1" />
                <internal:ViewPresenter Grid.Row="1"
                                        Content="{TemplateBinding SelectedContent}"
                                        ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}"
                                        AnimationDirection="{TemplateBinding AnimationDirection}"
                                        AnimationType="{TemplateBinding AnimationType}" />
            </Grid>
        </Border>
    </ControlTemplate>

</ResourceDictionary>